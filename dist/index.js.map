{"version":3,"file":"index.js","sources":["../src/types.ts","../src/MicInputManager.ts"],"sourcesContent":["export enum MicInputManagerEvent {\n  MIC_DISCONNECTED = 'MIC_DISCONNECTED',\n  MIC_NOT_FOUND = 'MIC_NOT_FOUND',\n  MIC_PERMISSION_DENIED = 'MIC_PERMISSION_DENIED',\n  MIC_MUTED = 'MIC_MUTED',\n  MIC_UNMUTED = 'MIC_UNMUTED',\n  MIC_LIST_CHANGED = 'MIC_LIST_CHANGED',\n  PEAKS = 'PEAKS',\n  TOO_LOUD = 'TOO_LOUD',\n  TOO_QUIET = 'TOO_QUIET',\n  SILIENT = 'SILIENT',\n  CLIPPING = 'CLIPPING',\n  CHUNK = 'CHUNK',\n  STREAM_ENDED = 'STREAM_ENDED',\n  AUDIO_PROCESSING_ERROR = 'AUDIO_PROCESSING_ERROR',\n  LISTENING = 'LISTENING',\n  STOPPED = 'STOPPED',\n}\n\nexport type MicKitEventCallback = (data?: any) => void;\n\nexport type MicrophoneDevice = { \n  label: string,\n  kind: string,\n  deviceId: string,\n  groupId: string,\n  isDefault: boolean,\n  isSelected: boolean\n};","import AudioProcessorWorklet from './audio-processor.blob.js';\nimport { MicInputManagerEvent, MicKitEventCallback, MicrophoneDevice } from './types.js';\n\nexport class MicInputManager {\n  private audioContext: AudioContext;\n  private workletNode!: AudioWorkletNode;\n  private gainNode!: GainNode;\n  private micSource!: MediaStreamAudioSourceNode;\n  private stream!: MediaStream;\n  private eventCallbacks: Map<MicInputManagerEvent, Set<MicKitEventCallback>> = new Map();\n  private selectedMicId: string | null = null;\n  private autoGainEnabled: boolean = true;\n  private gainStep: number = 0.1;\n  private minGain: number = 0.1;\n  private maxGain: number = 2.0;\n  private isListening: boolean = false;\n  private deviceChangeListenerAdded: boolean = false;\n  private defaultGain: number = 1.0;\n  private sliceDurationMs: number = 250;\n  private processorThresholds = {\n    silentThreshold: 0.005,\n    tooQuietThreshold: 0.02,\n    tooLoudThreshold: 0.7,\n    peakThreshold: 0.9,\n    clippingPercentage: 0.05,\n  };\n  private debugEnabled: boolean = false;\n\n  constructor(sliceDurationMs: number = 250, debug: boolean = false) {\n    this.audioContext = new AudioContext({ sampleRate: 16000 });\n    this.debugEnabled = debug;\n    this.sliceDurationMs = sliceDurationMs;\n  }\n\n  async listen() {\n    if (this.isListening) {\n      this.debugLog('Already listening');\n      return;\n    }\n    try {\n      await this.initializeAudioEngine();\n      const constraints: MediaStreamConstraints = {\n        audio: this.selectedMicId ? { deviceId: this.selectedMicId } : true,\n      };\n      this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      this.micSource = this.audioContext.createMediaStreamSource(this.stream);\n      this.micSource.connect(this.gainNode);\n      this.gainNode.connect(this.workletNode);\n\n      this.stream.getAudioTracks()[0].addEventListener('mute', () => {\n        this.emit(MicInputManagerEvent.MIC_MUTED);\n      });\n      this.stream.getAudioTracks()[0].addEventListener('unmute', () => {\n        this.emit(MicInputManagerEvent.MIC_UNMUTED);\n      });\n      this.stream.getAudioTracks()[0].addEventListener('ended', () => {\n        this.emit(MicInputManagerEvent.STREAM_ENDED);\n        this.stop();\n      });\n\n      this.isListening = true;\n      this.emit(MicInputManagerEvent.LISTENING);\n      this.debugLog('Microphone started successfully');\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  stop() {\n    if (!this.isListening) {\n      this.debugLog('Microphone is not active');\n      return;\n    }\n\n    if (this.stream) {\n      this.stream.getTracks().forEach((track) => track.stop());\n      this.debugLog('Microphone tracks stopped');\n    }\n    this.micSource?.disconnect();\n    this.gainNode?.disconnect();\n    this.workletNode?.disconnect();\n\n    if (this.audioContext.state === 'running') {\n      this.audioContext.suspend();\n    }\n\n    this.isListening = false;\n    this.emit(MicInputManagerEvent.STOPPED);\n  }\n\n  on(event: MicInputManagerEvent, callback: MicKitEventCallback): () => void {\n    if (typeof callback !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n\n    if (!this.eventCallbacks.has(event)) {\n        this.eventCallbacks.set(event, new Set());\n    }\n\n    const callbacks = this.eventCallbacks.get(event)!;\n    callbacks.add(callback);\n\n    return () => {\n        callbacks.delete(callback);\n    };\n  }\n\n  setMaxGain(maxGain: number): void {\n    this.maxGain = maxGain;\n  }\n\n  setMinGain(minGain: number): void {\n    this.minGain = minGain;\n  }  \n\n  setGain(gain: number): void {\n    this.gainNode.gain.value = gain;\n  }\n\n  setAutoGain(enabled: boolean): void {\n    this.autoGainEnabled = enabled;\n  }\n\n  setGainStep(step: number): void {\n    if (step <= 0) {\n      this.debugLog('Gain step must be a positive number');\n      return;\n    }\n    this.gainStep = step;\n    this.debugLog(`Gain step set to: ${step}`);\n  }\n\n  setProcessorThresholds(options: {\n    silentThreshold?: number;\n    tooQuietThreshold?: number;\n    tooLoudThreshold?: number;\n    peakThreshold?: number;\n    clippingPercentage?: number;\n  }): void {\n    this.processorThresholds = {\n      ...this.processorThresholds,\n      ...options,\n    };\n    if (this.workletNode) {\n      this.workletNode.port.postMessage({\n        type: 'updateThresholds',\n        options,\n      });\n    }\n  }\n\n  setSelectedMic(micId: string): void {\n    this.selectedMicId = micId;\n    this.debugLog(`Selected microphone device ID: ${micId}`);\n  }\n\n  setDefaultGain(gain: number): void {\n    this.defaultGain = gain;\n    if (this.gainNode) {\n      this.gainNode.gain.value = gain;\n    }\n    this.debugLog(`Default gain set to: ${gain}`);\n  }\n\n  async getAvailableMicrophones(): Promise<MicrophoneDevice[]> {\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n\n      const devices = await navigator.mediaDevices.enumerateDevices();\n\n      const audioInputs = devices.filter((device) => device.kind === 'audioinput');\n\n      return audioInputs.map((mic) => ({\n        label: mic.label,\n        kind: mic.kind,\n        deviceId: mic.deviceId,\n        groupId: mic.groupId,\n        isDefault: mic.deviceId === 'default',\n        isSelected: mic.deviceId === this.selectedMicId,\n      }));\n    } catch (error) {\n      this.debugLog('Error getting available microphones:', error);\n      this.handleError(error);\n      return [];\n    }\n  }\n\n  private async initializeAudioEngine() {\n    try {\n      if (!this.audioContext || this.audioContext.state === 'closed') {\n        this.audioContext = new AudioContext({ sampleRate: 16000 });\n      } else if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n  \n      if (!this.workletNode) {\n        await this.audioContext.audioWorklet.addModule(AudioProcessorWorklet);\n        this.workletNode = new AudioWorkletNode(this.audioContext, 'audio-processor', {\n          processorOptions: {\n            sliceDurationMs: this.sliceDurationMs,\n            ...this.processorThresholds\n          },\n        });\n        this.workletNode.port.onmessage = (event) => this.handleWorkletMessage(event.data);\n      }\n  \n      if (!this.gainNode) {\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = this.defaultGain;\n      }\n  \n      if (!this.deviceChangeListenerAdded) {\n        navigator.mediaDevices.addEventListener('devicechange', () => this.handleDeviceChange());\n        this.deviceChangeListenerAdded = true;\n      }\n  \n      this.debugLog('Audio worklet initialized successfully');\n    } catch (error) {\n      this.debugLog('Failed to initialize audio worklet:', error);\n      this.handleError(error);\n    }\n  }\n\n  private emit(event: MicInputManagerEvent, data?: any) {\n    const callbacks = this.eventCallbacks.get(event);\n    callbacks?.forEach((cb) => cb(data));\n  }\n\n  private async handleDeviceChange() {\n    try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const audioInputs = devices.filter((device) => device.kind === 'audioinput');\n        this.emit(MicInputManagerEvent.MIC_LIST_CHANGED, audioInputs);\n\n        if (audioInputs.length === 0) {\n            this.debugLog('No microphones available');\n            this.emit(MicInputManagerEvent.MIC_DISCONNECTED, { reason: 'No microphones available' });\n            this.stop();\n            return;\n        }\n\n        const currentMicStillAvailable = this.selectedMicId\n            ? audioInputs.some((device) => device.deviceId === this.selectedMicId)\n            : audioInputs.some((device) => this.stream?.getAudioTracks()[0]?.getSettings()?.deviceId === device.deviceId);\n\n        if (!currentMicStillAvailable) {\n            this.debugLog('Current microphone disconnected');\n            this.emit(MicInputManagerEvent.MIC_DISCONNECTED, { reason: 'Currently used microphone was disconnected' });\n            this.stop();\n        }\n    } catch (error) {\n        this.debugLog('Error handling device change:', error);\n        this.handleError(error);\n    }\n  }\n\n  private adjustGain(change: number) {\n    if (this.autoGainEnabled) {\n      this.gainNode.gain.value = Math.max(this.minGain, Math.min(this.maxGain, this.gainNode.gain.value + change));\n      this.debugLog(`Adjusting Gain: ${this.gainNode.gain.value}`);\n    }\n  }  \n\n  private handleWorkletMessage(data: any) {\n    switch (data.type) {\n      case MicInputManagerEvent.CHUNK:\n        this.emit(MicInputManagerEvent.CHUNK, data);\n        break;\n      case MicInputManagerEvent.TOO_LOUD:\n      case MicInputManagerEvent.PEAKS:\n        this.adjustGain(-this.gainStep);\n        this.emit(data.type, { rms: data.rms });\n        break;\n      case MicInputManagerEvent.TOO_QUIET:\n        this.adjustGain(this.gainStep);\n        this.emit(MicInputManagerEvent.TOO_QUIET, { rms: data.rms });\n        break;\n      case MicInputManagerEvent.SILIENT:\n        this.emit(MicInputManagerEvent.SILIENT, { rms: data.rms });\n        break;\n      case MicInputManagerEvent.CLIPPING:\n        this.emit(MicInputManagerEvent.CLIPPING, { rms: data.rms });\n        break;\n      default:\n        this.debugLog('Unhandled audio worklet message:', data);\n    }\n  }\n\n  private handleError(error: any) {\n    this.isListening = false;\n    switch (error?.name) {\n      case 'NotFoundError':\n        this.emit(MicInputManagerEvent.MIC_NOT_FOUND);\n        break;\n      case 'NotAllowedError':\n        this.emit(MicInputManagerEvent.MIC_PERMISSION_DENIED);\n        break;\n      default:\n        this.emit(MicInputManagerEvent.AUDIO_PROCESSING_ERROR, error);\n    }\n    this.stop();\n    this.debugLog('Microphone Error:', error);\n  }\n\n  private debugLog(...messages: any[]): void {\n    if (this.debugEnabled) {\n      console.debug(`[DEBUG] MicAudioInput: `, ...messages);\n    }\n  }\n\n}"],"names":[],"mappings":"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"}
{"version":3,"file":"index.js","sources":["../src/types.ts","../src/MicInputManager.ts"],"sourcesContent":["export enum MicInputManagerEvent {\n  MIC_DISCONNECTED = 'MIC_DISCONNECTED',\n  MIC_NOT_FOUND = 'MIC_NOT_FOUND',\n  MIC_PERMISSION_DENIED = 'MIC_PERMISSION_DENIED',\n  MIC_MUTED = 'MIC_MUTED',\n  MIC_UNMUTED = 'MIC_UNMUTED',\n  MIC_LIST_CHANGED = 'MIC_LIST_CHANGED',\n  PEAKS = 'PEAKS',\n  TOO_LOUD = 'TOO_LOUD',\n  TOO_QUIET = 'TOO_QUIET',\n  SILIENT = 'SILIENT',\n  CLIPPING = 'CLIPPING',\n  CHUNK = 'CHUNK',\n  STREAM_ENDED = 'STREAM_ENDED',\n  AUDIO_PROCESSING_ERROR = 'AUDIO_PROCESSING_ERROR',\n  LISTENING = 'LISTENING',\n  STOPPED = 'STOPPED',\n}\n\nexport type MicKitEventCallback = (data?: any) => void;\n\nexport type MicrophoneDevice = { \n  label: string,\n  kind: string,\n  deviceId: string,\n  groupId: string,\n  isDefault: boolean,\n  isSelected: boolean\n};","import AudioProcessorWorklet from './audio-processor.blob.js';\nimport { MicInputManagerEvent, MicKitEventCallback, MicrophoneDevice } from './types.js';\n\nexport class MicInputManager {\n  private audioContext: AudioContext;\n  private workletNode!: AudioWorkletNode;\n  private gainNode!: GainNode;\n  private micSource!: MediaStreamAudioSourceNode;\n  private stream!: MediaStream;\n  private eventCallbacks: Map<MicInputManagerEvent, Set<MicKitEventCallback>> = new Map();\n  private selectedMicId: string | null = null;\n  private autoGainEnabled: boolean = true;\n  private gainStep: number = 0.1;\n  private minGain: number = 0.1;\n  private maxGain: number = 2.0;\n  private isListening: boolean = false;\n  private deviceChangeListenerAdded: boolean = false;\n  private defaultGain: number = 1.0;\n  private sliceDurationMs: number = 250;\n  private processorThresholds = {\n    silentThreshold: 0.005,\n    tooQuietThreshold: 0.02,\n    tooLoudThreshold: 0.7,\n    peakThreshold: 0.9,\n    clippingPercentage: 0.05,\n  };\n  private debugEnabled: boolean = false;\n\n  constructor(sliceDurationMs: number = 250, debug: boolean = false) {\n    this.audioContext = new AudioContext({ sampleRate: 16000 });\n    this.debugEnabled = debug;\n    this.sliceDurationMs = sliceDurationMs;\n  }\n\n  async listen() {\n    if (this.isListening) {\n      this.debugLog('Already listening');\n      return;\n    }\n    try {\n      await this.initializeAudioEngine();\n      const constraints: MediaStreamConstraints = {\n        audio: this.selectedMicId ? { deviceId: this.selectedMicId } : true,\n      };\n      this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      this.micSource = this.audioContext.createMediaStreamSource(this.stream);\n      this.micSource.connect(this.gainNode);\n      this.gainNode.connect(this.workletNode);\n\n      this.stream.getAudioTracks()[0].addEventListener('mute', () => {\n        this.emit(MicInputManagerEvent.MIC_MUTED);\n      });\n      this.stream.getAudioTracks()[0].addEventListener('unmute', () => {\n        this.emit(MicInputManagerEvent.MIC_UNMUTED);\n      });\n      this.stream.getAudioTracks()[0].addEventListener('ended', () => {\n        this.emit(MicInputManagerEvent.STREAM_ENDED);\n        this.stop();\n      });\n\n      this.isListening = true;\n      this.emit(MicInputManagerEvent.LISTENING);\n      this.debugLog('Microphone started successfully');\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  stop() {\n    if (!this.isListening) {\n      this.debugLog('Microphone is not active');\n      return;\n    }\n\n    if (this.stream) {\n      this.stream.getTracks().forEach((track) => track.stop());\n      this.debugLog('Microphone tracks stopped');\n    }\n    this.micSource?.disconnect();\n    this.gainNode?.disconnect();\n    this.workletNode?.disconnect();\n\n    if (this.audioContext.state === 'running') {\n      this.audioContext.suspend();\n    }\n\n    this.isListening = false;\n    this.emit(MicInputManagerEvent.STOPPED);\n  }\n\n  on(event: MicInputManagerEvent, callback: MicKitEventCallback): () => void {\n    if (typeof callback !== 'function') {\n      throw new Error('Callback must be a function');\n    }\n\n    if (!this.eventCallbacks.has(event)) {\n        this.eventCallbacks.set(event, new Set());\n    }\n\n    const callbacks = this.eventCallbacks.get(event)!;\n    callbacks.add(callback);\n\n    return () => {\n        callbacks.delete(callback);\n    };\n  }\n\n  setMaxGain(maxGain: number): void {\n    this.maxGain = maxGain;\n  }\n\n  setMinGain(minGain: number): void {\n    this.minGain = minGain;\n  }  \n\n  setGain(gain: number): void {\n    this.gainNode.gain.value = gain;\n  }\n\n  setAutoGain(enabled: boolean): void {\n    this.autoGainEnabled = enabled;\n  }\n\n  setGainStep(step: number): void {\n    if (step <= 0) {\n      this.debugLog('Gain step must be a positive number');\n      return;\n    }\n    this.gainStep = step;\n    this.debugLog(`Gain step set to: ${step}`);\n  }\n\n  setProcessorThresholds(options: {\n    silentThreshold?: number;\n    tooQuietThreshold?: number;\n    tooLoudThreshold?: number;\n    peakThreshold?: number;\n    clippingPercentage?: number;\n  }): void {\n    this.processorThresholds = {\n      ...this.processorThresholds,\n      ...options,\n    };\n    if (this.workletNode) {\n      this.workletNode.port.postMessage({\n        type: 'updateThresholds',\n        options,\n      });\n    }\n  }\n\n  setSelectedMic(micId: string): void {\n    this.selectedMicId = micId;\n    this.debugLog(`Selected microphone device ID: ${micId}`);\n  }\n\n  setDefaultGain(gain: number): void {\n    this.defaultGain = gain;\n    if (this.gainNode) {\n      this.gainNode.gain.value = gain;\n    }\n    this.debugLog(`Default gain set to: ${gain}`);\n  }\n\n  async getAvailableMicrophones(): Promise<MicrophoneDevice[]> {\n    try {\n      await navigator.mediaDevices.getUserMedia({ audio: true });\n\n      const devices = await navigator.mediaDevices.enumerateDevices();\n\n      const audioInputs = devices.filter((device) => device.kind === 'audioinput');\n\n      return audioInputs.map((mic) => ({\n        label: mic.label,\n        kind: mic.kind,\n        deviceId: mic.deviceId,\n        groupId: mic.groupId,\n        isDefault: mic.deviceId === 'default',\n        isSelected: mic.deviceId === this.selectedMicId,\n      }));\n    } catch (error) {\n      this.debugLog('Error getting available microphones:', error);\n      this.handleError(error);\n      return [];\n    }\n  }\n\n  private async initializeAudioEngine() {\n    try {\n      if (!this.audioContext || this.audioContext.state === 'closed') {\n        this.audioContext = new AudioContext({ sampleRate: 16000 });\n      } else if (this.audioContext.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n  \n      if (!this.workletNode) {\n        await this.audioContext.audioWorklet.addModule(AudioProcessorWorklet);\n        this.workletNode = new AudioWorkletNode(this.audioContext, 'audio-processor', {\n          processorOptions: {\n            sliceDurationMs: this.sliceDurationMs,\n            ...this.processorThresholds\n          },\n        });\n        this.workletNode.port.onmessage = (event) => this.handleWorkletMessage(event.data);\n      }\n  \n      if (!this.gainNode) {\n        this.gainNode = this.audioContext.createGain();\n        this.gainNode.gain.value = this.defaultGain;\n      }\n  \n      if (!this.deviceChangeListenerAdded) {\n        navigator.mediaDevices.addEventListener('devicechange', () => this.handleDeviceChange());\n        this.deviceChangeListenerAdded = true;\n      }\n  \n      this.debugLog('Audio worklet initialized successfully');\n    } catch (error) {\n      this.debugLog('Failed to initialize audio worklet:', error);\n      this.handleError(error);\n    }\n  }\n\n  private emit(event: MicInputManagerEvent, data?: any) {\n    const callbacks = this.eventCallbacks.get(event);\n    callbacks?.forEach((cb) => cb(data));\n  }\n\n  private async handleDeviceChange() {\n    try {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        const audioInputs = devices.filter((device) => device.kind === 'audioinput');\n        this.emit(MicInputManagerEvent.MIC_LIST_CHANGED, audioInputs);\n\n        if (audioInputs.length === 0) {\n            this.debugLog('No microphones available');\n            this.emit(MicInputManagerEvent.MIC_DISCONNECTED, { reason: 'No microphones available' });\n            this.stop();\n            return;\n        }\n\n        const currentMicStillAvailable = this.selectedMicId\n            ? audioInputs.some((device) => device.deviceId === this.selectedMicId)\n            : audioInputs.some((device) => this.stream?.getAudioTracks()[0]?.getSettings()?.deviceId === device.deviceId);\n\n        if (!currentMicStillAvailable) {\n            this.debugLog('Current microphone disconnected');\n            this.emit(MicInputManagerEvent.MIC_DISCONNECTED, { reason: 'Currently used microphone was disconnected' });\n            this.stop();\n        }\n    } catch (error) {\n        this.debugLog('Error handling device change:', error);\n        this.handleError(error);\n    }\n  }\n\n  private adjustGain(change: number) {\n    if (this.autoGainEnabled) {\n      this.gainNode.gain.value = Math.max(this.minGain, Math.min(this.maxGain, this.gainNode.gain.value + change));\n      this.debugLog(`Adjusting Gain: ${this.gainNode.gain.value}`);\n    }\n  }  \n\n  private handleWorkletMessage(data: any) {\n    switch (data.type) {\n      case MicInputManagerEvent.CHUNK:\n        this.emit(MicInputManagerEvent.CHUNK, data);\n        break;\n      case MicInputManagerEvent.TOO_LOUD:\n      case MicInputManagerEvent.PEAKS:\n        this.adjustGain(-this.gainStep);\n        this.emit(data.type, { rms: data.rms });\n        break;\n      case MicInputManagerEvent.TOO_QUIET:\n        this.adjustGain(this.gainStep);\n        this.emit(MicInputManagerEvent.TOO_QUIET, { rms: data.rms });\n        break;\n      case MicInputManagerEvent.SILIENT:\n        this.emit(MicInputManagerEvent.SILIENT, { rms: data.rms });\n        break;\n      case MicInputManagerEvent.CLIPPING:\n        this.emit(MicInputManagerEvent.CLIPPING, { rms: data.rms });\n        break;\n      default:\n        this.debugLog('Unhandled audio worklet message:', data);\n    }\n  }\n\n  private handleError(error: any) {\n    this.isListening = false;\n    switch (error?.name) {\n      case 'NotFoundError':\n        this.emit(MicInputManagerEvent.MIC_NOT_FOUND);\n        break;\n      case 'NotAllowedError':\n        this.emit(MicInputManagerEvent.MIC_PERMISSION_DENIED);\n        break;\n      default:\n        this.emit(MicInputManagerEvent.AUDIO_PROCESSING_ERROR, error);\n    }\n    this.stop();\n    this.debugLog('Microphone Error:', error);\n  }\n\n  private debugLog(...messages: any[]): void {\n    if (this.debugEnabled) {\n      console.debug(`[DEBUG] MicAudioInput: `, ...messages);\n    }\n  }\n\n}"],"names":[],"mappings":"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"}